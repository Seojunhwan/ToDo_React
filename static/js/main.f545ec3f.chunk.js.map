{"version":3,"sources":["components/atoms.tsx","components/CreateToDo.tsx","components/ToDo.tsx","components/CategoryButtons.tsx","components/ToDoList.tsx","App.tsx","index.tsx","theme.ts"],"names":["Categories","persistAtom","recoilPersist","categoryState","atom","key","default","TO_DO","toDoState","effects_UNSTABLE","toDoSelector","selector","get","toDos","category","OTHER","filter","toDo","DOING","DONE","Form","styled","form","Input","input","props","borderColor","Button","button","bgColors","CreateToDo","setToDos","useSetRecoilState","useRecoilValue","useForm","register","handleSubmit","errors","formState","watch","setValue","onSubmit","custom","oldToDos","text","id","Date","now","required","placeholder","autoComplete","message","type","List","li","Buttons","div","DoingButton","ToDoButton","DoneButton","CategoryButton","DeleteButton","ToDo","onClick","newCategory","targetIndex","findIndex","newToDo","slice","as","OtherButton","CategoryButtons","setCategory","changeCategory","event","value","currentTarget","Container","main","Title","h1","ToDoList","map","GlobalStyle","createGlobalStyle","theme","bgColor","App","ReactDOM","render","StrictMode","errorColor","document","getElementById"],"mappings":"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","file":"static/js/main.f545ec3f.chunk.js","sourcesContent":["import { atom, selector } from \"recoil\";\nimport { recoilPersist } from \"recoil-persist\";\n\nconst { persistAtom } = recoilPersist();\n\nexport enum Categories {\n  \"TO_DO\" = \"TO_DO\",\n  \"DOING\" = \"DOING\",\n  \"DONE\" = \"DONE\",\n  \"OTHER\" = \"OTHER\",\n}\nexport interface IToDo {\n  text: string;\n  id: number;\n  category: Categories;\n}\n\nexport const categoryState = atom<Categories>({\n  key: \"category\",\n  default: Categories.TO_DO,\n});\n\nexport const toDoState = atom<IToDo[]>({\n  key: \"toDo\",\n  default: [],\n  effects_UNSTABLE: [persistAtom],\n});\n\nexport const toDoSelector = selector({\n  key: \"toDoSelector\",\n  get: ({ get }) => {\n    const toDos = get(toDoState);\n    const category = get(categoryState);\n    if (category === Categories.OTHER)\n      return toDos.filter(\n        (toDo) =>\n          toDo.category !== Categories.DOING &&\n          toDo.category !== Categories.TO_DO &&\n          toDo.category !== Categories.DONE\n      );\n    return toDos.filter((toDo) => toDo.category === category);\n  },\n});\n","import { useForm } from \"react-hook-form\";\nimport { useRecoilValue, useSetRecoilState } from \"recoil\";\nimport styled from \"styled-components\";\nimport { Categories, categoryState, IToDo, toDoState } from \"./atoms\";\n\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  position: relative;\n  padding: 15px 0px;\n`;\n\nconst Input = styled.input<{ borderColor: string }>`\n  padding: 10px 0px;\n  border: 0;\n  margin-bottom: 10px;\n  border-bottom: 2px solid #ebeeff;\n  transition: all 0.3s ease-in-out;\n  text-align: center;\n  border-bottom: 2px solid\n    ${(props) => (props.borderColor ? props.borderColor : \"#ebeeff\")};\n  &:focus {\n    border-bottom: 2px solid ${(props) => props.borderColor};\n  }\n`;\n\nexport const Button = styled.button<{ bgColors?: string }>`\n  border: none;\n  transition: all 0.2s ease-in-out;\n  background-color: ${(props) => props.bgColors};\n  color: white;\n  padding: 10px;\n  font-family: inherit;\n  cursor: pointer;\n  &:hover {\n    opacity: 0.9;\n  }\n`;\n\ninterface IForm {\n  toDo: string;\n  extraError?: string;\n  category?: string;\n}\n\nfunction CreateToDo() {\n  const setToDos = useSetRecoilState(toDoState);\n  const category = useRecoilValue<IToDo[\"category\"]>(categoryState);\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n    watch,\n    setValue,\n  } = useForm<IForm>();\n  const handleValid = ({ toDo, category: custom }: IForm) => {\n    setToDos((oldToDos) => [\n      {\n        text: toDo,\n        id: Date.now(),\n        category: (custom as IToDo[\"category\"]) || category,\n      },\n      ...oldToDos,\n    ]);\n    setValue(\"toDo\", \"\");\n    setValue(\"category\", \"\");\n  };\n  return (\n    <Form onSubmit={handleSubmit(handleValid)}>\n      {category === Categories.OTHER ? (\n        <Input\n          {...register(\"category\", {\n            required: \"카테고리를 입력해주세요!\",\n          })}\n          placeholder=\"카테고리를 입력해주세요!\"\n          autoComplete=\"off\"\n          borderColor={\n            errors.category?.message\n              ? \"#ff7073\"\n              : watch().category\n              ? \"#78e08f\"\n              : \"#ebeeff\"\n          }\n        />\n      ) : (\n        \"\"\n      )}\n      <Input\n        {...register(\"toDo\", { required: \"할 일을 입력해주세요!\" })}\n        type=\"text\"\n        placeholder=\"오늘은 어떤 일을 해볼까요?\"\n        autoComplete=\"off\"\n        borderColor={\n          errors.toDo?.message\n            ? \"#ff7073\"\n            : watch().toDo\n            ? \"#78e08f\"\n            : \"#ebeeff\"\n        }\n      />\n      <Button\n        bgColors={\n          errors.toDo?.message\n            ? \"#ff7073\"\n            : errors.category?.message\n            ? \"#ff7073\"\n            : watch().toDo\n            ? \"#78e08f\"\n            : \"#ebeeff\"\n        }\n      >\n        {errors.category?.message ?? errors?.toDo?.message ?? \"딸깍\"}\n      </Button>\n    </Form>\n  );\n}\n\nexport default CreateToDo;\n","import React from \"react\";\nimport { useSetRecoilState } from \"recoil\";\nimport styled from \"styled-components\";\nimport { Categories, IToDo, toDoState } from \"./atoms\";\nimport { Button } from \"./CreateToDo\";\n\nconst List = styled.li`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 20px;\n  position: relative;\n  padding: 10px 0px;\n  transition: box-shadow 0.2s ease-out;\n  border-radius: 5px;\n  span {\n    text-align: center;\n  }\n  &:hover {\n    box-shadow: rgba(27, 31, 35, 0.04) 0px 1px 0px,\n      rgba(255, 255, 255, 0.25) 0px 1px 0px inset;\n  }\n`;\n\nexport const Buttons = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-bottom: 15px;\n`;\n\nexport const DoingButton = styled(Button)`\n  background-color: #ffde82;\n`;\nexport const ToDoButton = styled(Button)`\n  background-color: #ff9433;\n`;\nexport const DoneButton = styled(Button)`\n  background-color: #78e08f;\n`;\n\nconst CategoryButton = styled(Button)`\n  background-color: #aaae8a;\n`;\n\nconst DeleteButton = styled(Button)`\n  background-color: #ff9999;\n`;\n\nfunction ToDo({ text, category, id }: IToDo) {\n  const setToDos = useSetRecoilState(toDoState);\n  const onClick = (newCategory: IToDo[\"category\"]) => {\n    setToDos((oldToDos) => {\n      const targetIndex = oldToDos.findIndex((toDo) => toDo.id === id);\n      const newToDo = { text, id, category: newCategory };\n      return [\n        ...oldToDos.slice(0, targetIndex),\n        newToDo,\n        ...oldToDos.slice(targetIndex + 1),\n      ];\n    });\n  };\n  const deleteToDo = () => {\n    setToDos((oldToDos) => {\n      const targetIndex = oldToDos.findIndex((toDo) => toDo.id === id);\n      return [\n        ...oldToDos.slice(0, targetIndex),\n        ...oldToDos.slice(targetIndex + 1),\n      ];\n    });\n  };\n  return (\n    <List>\n      <Buttons>\n        {category !== Categories.DOING &&\n          category !== Categories.TO_DO &&\n          category !== Categories.DONE && (\n            <CategoryButton as={\"span\"}>{category}</CategoryButton>\n          )}\n        {category !== Categories.DOING && (\n          <DoingButton onClick={() => onClick(Categories.DOING)}>\n            하는 중!\n          </DoingButton>\n        )}\n        {category !== Categories.TO_DO && (\n          <ToDoButton onClick={() => onClick(Categories.TO_DO)}>\n            해야해\n          </ToDoButton>\n        )}\n        {category !== Categories.DONE && (\n          <DoneButton onClick={() => onClick(Categories.DONE)}>\n            다 했다!\n          </DoneButton>\n        )}\n        <DeleteButton onClick={deleteToDo}>안할래</DeleteButton>\n      </Buttons>\n      <span>{text}</span>\n    </List>\n  );\n}\nexport default ToDo;\n","import { useSetRecoilState } from \"recoil\";\nimport styled from \"styled-components\";\nimport { Categories, categoryState } from \"./atoms\";\nimport { Button } from \"./CreateToDo\";\nimport { Buttons, DoingButton, ToDoButton, DoneButton } from \"./ToDo\";\n\nconst OtherButton = styled(Button)`\n  background-color: #738ff3;\n`;\n\nfunction CategoryButtons() {\n  const setCategory = useSetRecoilState(categoryState);\n  const changeCategory = (event: React.FormEvent<HTMLButtonElement>) => {\n    const {\n      currentTarget: { value },\n    } = event;\n    setCategory(value as any);\n  };\n  return (\n    <Buttons>\n      <ToDoButton value={Categories.TO_DO} onClick={changeCategory}>\n        To Do\n      </ToDoButton>\n      <DoingButton value={Categories.DOING} onClick={changeCategory}>\n        Doing\n      </DoingButton>\n      <DoneButton value={Categories.DONE} onClick={changeCategory}>\n        Done\n      </DoneButton>\n      <OtherButton value={Categories.OTHER} onClick={changeCategory}>\n        Other\n      </OtherButton>\n    </Buttons>\n  );\n}\n\nexport default CategoryButtons;\n","import React from \"react\";\nimport { useRecoilValue } from \"recoil\";\nimport styled from \"styled-components\";\nimport { toDoSelector } from \"./atoms\";\nimport CategoryButtons from \"./CategoryButtons\";\nimport CreateToDo from \"./CreateToDo\";\nimport ToDo from \"./ToDo\";\n\nconst Container = styled.main`\n  padding: 0px 20px;\n  max-width: 480px;\n  margin: 0 auto;\n`;\n\nconst Title = styled.h1`\n  font-size: 30px;\n  margin: 30px;\n  text-align: center;\n`;\n\nfunction ToDoList() {\n  const toDos = useRecoilValue(toDoSelector);\n  return (\n    <Container>\n      <Title>To Dos</Title>\n      <CategoryButtons />\n      <CreateToDo />\n      {toDos?.map((toDo) => (\n        <ToDo key={toDo.id} {...toDo} />\n      ))}\n    </Container>\n  );\n}\n\nexport default ToDoList;\n","import { createGlobalStyle } from \"styled-components\";\nimport ToDoList from \"./components/ToDoList\";\n\nconst GlobalStyle = createGlobalStyle`\n@font-face {\n      font-family: 'Cafe24SsurroundAir';\n      src: url('https://cdn.jsdelivr.net/gh/projectnoonnu/noonfonts_2105_2@1.0/Cafe24SsurroundAir.woff') format('woff');\n      font-weight: normal;\n      font-style: normal;\n  }\n  *{\n    box-sizing:border-box;\n    font-family:'Cafe24SsurroundAir', sans-serif;\n  }\n  html, body, div, span, applet, object, iframe,\n  h1, h2, h3, h4, h5, h6, p, blockquote, pre,\n  a, abbr, acronym, address, big, cite, code,\n  del, dfn, em, img, ins, kbd, q, s, samp,\n  small, strike, strong, sub, sup, tt, var,\n  b, u, i, center,\n  dl, dt, dd, menu, ol, ul, li,\n  fieldset, form, label, legend,\n  table, caption, tbody, tfoot, thead, tr, th, td,\n  article, aside, canvas, details, embed,\n  figure, figcaption, footer, header, hgroup,\n  main, menu, nav, output, ruby, section, summary,\n  time, mark, audio, video {\n    margin: 0;\n    padding: 0;\n    border: 0;\n    font-size: 100%;\n    font: inherit;\n    vertical-align: baseline;\n  }\n  /* HTML5 display-role reset for older browsers */\n  article, aside, details, figcaption, figure,\n  footer, header, hgroup, main, menu, nav, section {\n    display: block;\n  }\n  /* HTML5 hidden-attribute fix for newer browsers */\n  *[hidden] {\n      display: none;\n  }\n  body {\n    line-height: 1;\n  }\n  menu, ol, ul {\n    list-style: none;\n  }\n  blockquote, q {\n    quotes: none;\n  }\n  blockquote:before, blockquote:after,\n  q:before, q:after {\n    content: '';\n    content: none;\n  }\n  table {\n    border-collapse: collapse;\n    border-spacing: 0;\n  }\n  body{\n    font-family:'Cafe24SsurroundAir', sans-serif;\n    transition:all .3s ease-in-out ;\n    background-color:${(props) => props.theme.bgColor};\n  }\n  a{\n    text-decoration:none;\n    color:inherit;\n  }\n  input{\n    outline:none;\n  }\n  li{\n    list-style-type:none;\n  }\n`;\n\nfunction App() {\n  return (\n    <>\n      <GlobalStyle />\n      <ToDoList />\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { ThemeProvider } from \"styled-components\";\nimport { lightTheme } from \"./theme\";\nimport { RecoilRoot } from \"recoil\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <RecoilRoot>\n      <ThemeProvider theme={lightTheme}>\n        <App />\n      </ThemeProvider>\n    </RecoilRoot>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","import { DefaultTheme } from \"styled-components\";\n\nexport const lightTheme: DefaultTheme = {\n  bgColor: \"white\",\n  errorColor: \"#ff7073\",\n};\n"],"sourceRoot":""}